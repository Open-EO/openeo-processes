{
    "id": "lte",
    "summary": "Less than or equal to comparison",
    "description": "Compares whether `x` is less than or equal to `y`.\n\n**Remarks:**\n\n* If any operand is `null`, the return value is `null`. Therefore, `lte(null, null)` returns `null` instead of `true`.\n* If any operand is an array or object, the return value is `false`.\n* If the operands are not equal (see process ``eq()``) and any of them is not a `number` or temporal string (`date`, `time` or `date-time`), the process returns `false`.\n* Temporal strings can *not* be compared based on their string representation due to the time zone / time-offset representations.",
    "categories": [
        "comparison"
    ],
    "parameters": [
        {
            "name": "x",
            "description": "First operand.",
            "schema": {
                "description": "Any data type is allowed."
            }
        },
        {
            "name": "y",
            "description": "Second operand.",
            "schema": {
                "description": "Any data type is allowed."
            }
        }
    ],
    "returns": {
        "description": "`true` if `x` is less than or equal to `y`, `null` if any operand is `null`, otherwise `false`.",
        "schema": {
            "type": [
                "boolean",
                "null"
            ]
        }
    },
    "examples": [
        {
            "arguments": {
                "x": 1,
                "y": null
            },
            "returns": null
        },
        {
            "arguments": {
                "x": 0,
                "y": 0
            },
            "returns": true
        },
        {
            "arguments": {
                "x": 1,
                "y": 2
            },
            "returns": true
        },
        {
            "arguments": {
                "x": -0.5,
                "y": -0.6
            },
            "returns": false
        },
        {
            "arguments": {
                "x": "00:00:00+01:00",
                "y": "00:00:00Z"
            },
            "returns": true
        },
        {
            "arguments": {
                "x": "1950-01-01T00:00:00Z",
                "y": "2018-01-01T12:00:00Z"
            },
            "returns": true
        },
        {
            "arguments": {
                "x": "2018-01-01T12:00:00+00:00",
                "y": "2018-01-01T12:00:00Z"
            },
            "returns": true
        },
        {
            "arguments": {
                "x": false,
                "y": true
            },
            "returns": false
        },
        {
            "arguments": {
                "x": [
                    1,
                    2,
                    3
                ],
                "y": [
                    1,
                    2,
                    3
                ]
            },
            "returns": false
        }
    ],
    "process_graph": {
        "eq": {
            "process_id": "eq",
            "arguments": {
                "x": {
                    "from_parameter": "x"
                },
                "y": {
                    "from_parameter": "y"
                }
            }
        },
        "lt": {
            "process_id": "lt",
            "arguments": {
                "x": {
                    "from_parameter": "x"
                },
                "y": {
                    "from_parameter": "y"
                }
            }
        },
        "or": {
            "process_id": "or",
            "arguments": {
                "x": {
                    "from_node": "lt"
                },
                "y": {
                    "from_node": "eq"
                }
            },
            "result": true
        }
    }
}