{
    "id": "cummin",
    "summary": "Cumulative minima",
    "description": "Finds cumulative minima of an array of numbers. Every computed element is equal to the smaller one between the current element and the previously computed element. The returned array and the input array have always the same length.\n\nBy default, no-data values are skipped, but stay in the result. Setting the `ignore_nodata` flag to `true` makes that once a no-data value (`null`) is reached all following elements are set to `null` in the result.",
    "categories": [
        "math > cumulative"
    ],
    "experimental": true,
    "parameters": [
        {
            "name": "data",
            "description": "An array of numbers.",
            "schema": {
                "type": "array",
                "items": {
                    "type": [
                        "number",
                        "null"
                    ]
                }
            }
        },
        {
            "name": "ignore_nodata",
            "description": "Indicates whether no-data values are ignored or not and ignores them by default. Setting this flag to `false` considers no-data values so that `null` is set for all the following elements.",
            "schema": {
                "type": "boolean"
            },
            "default": true,
            "optional": true
        }
    ],
    "returns": {
        "description": "An array with the computed cumulative minima.",
        "schema": {
            "type": "array",
            "items": {
                "type": [
                    "number",
                    "null"
                ]
            }
        }
    },
    "examples": [
        {
            "arguments": {
                "data": [
                    5,
                    3,
                    1,
                    3,
                    5
                ]
            },
            "returns": [
                5,
                3,
                1,
                1,
                1
            ]
        },
        {
            "arguments": {
                "data": [
                    5,
                    3,
                    null,
                    1,
                    5
                ]
            },
            "returns": [
                5,
                3,
                null,
                1,
                1
            ]
        },
        {
            "arguments": {
                "data": [
                    5,
                    3,
                    null,
                    1,
                    5
                ],
                "ignore_nodata": false
            },
            "returns": [
                5,
                3,
                null,
                null,
                null
            ]
        }
    ]
}